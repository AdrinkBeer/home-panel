---
trigger:
  batch: true
  branches:
    include:
      - master
pr:
  - master
schedules:
  - cron: "0 1 * * *"
    displayName: "nightly builds"
    branches:
      include:
        - dev
    always: true
variables:
  - name: yarnCachePath
    value: $(Pipeline.Workspace)/.yarn
  - name: githubRepository
    value: 'timmo001/home-panel'
  - name: dockerSlug
    value: 'home-panel'
  - name: dockerTarget
    value: '.'
  - name: aarch64Base
    value: 'arm64v8/alpine:3.10.3'
  - name: amd64Base
    value: 'amd64/alpine:3.10.3'
  - name: armhfBase
    value: 'arm32v6/alpine:3.10.3'
  - name: armv7Base
    value: 'arm32v7/alpine:3.10.3'
  - name: i386Base
    value: 'i386/alpine:3.10.3'

stages:
  - stage: 'Build'
    jobs:
      - job: 'Build_App'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: Cache@2
            inputs:
              key: 'yarn | "$(Agent.OS)" | yarn.lock'
              path: $(yarnCachePath)
              restoreKeys: |
                yarn | "$(Agent.OS)"
                yarn
            displayName: 'Cache Yarn Packages'
          - task: NodeTool@0
            inputs:
              versionSpec: '13.x'
            displayName: 'Install Node.js'
          - script: |
              yarn install  --pure-lockfile --cache-folder $(yarnCachePath)
              yarn run build --production
            displayName: 'Install and Build'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'build'
              ArtifactName: 'app'
              publishLocation: 'Container'
            displayName: 'Publish Build'
      - job: 'Build_Docker'
        dependsOn:
          - 'Build_App'
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DownloadBuildArtifacts@0
            displayName: 'Download Build Artifacts'
            inputs:
              artifactName: 'app'
              downloadPath: $(System.DefaultWorkingDirectory)
          - task: Docker@2
            inputs:
              containerRegistry: 'dockerHub'
              repository: 'home-panel'
              command: 'build'
              Dockerfile: '**/Dockerfile'
            displayName: 'Docker Build'
