{
    "docs": [
        {
            "location": "/",
            "text": "Home Panel\n\u00b6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nA touch-compatible web-app for controlling the home.\n\n\nFeatures\n\u00b6\n\n\n\n\nSupports and can be used as alternate frontend for \nHome Assistant\n\n\nSupports MJPEG and related image-based camera/image feeds\n\n\nAdd weather and weather icons using Home Assistant's\n \nDark Sky\n component\n\n\nMade for touch screens with a sideways scrolling Material\n Design interface. (Compatible with deskops also)\n\n\n\n\nScreenshots\n\u00b6",
            "title": "Overview"
        },
        {
            "location": "/#home-panel",
            "text": "A touch-compatible web-app for controlling the home.",
            "title": "Home Panel"
        },
        {
            "location": "/#features",
            "text": "Supports and can be used as alternate frontend for  Home Assistant  Supports MJPEG and related image-based camera/image feeds  Add weather and weather icons using Home Assistant's\n  Dark Sky  component  Made for touch screens with a sideways scrolling Material\n Design interface. (Compatible with deskops also)",
            "title": "Features"
        },
        {
            "location": "/#screenshots",
            "text": "",
            "title": "Screenshots"
        },
        {
            "location": "/setup/",
            "text": "Setup\n\u00b6\n\n\nDocker Compose\n\u00b6\n\n\n\n\nInstall \nDocker\n and\n \nDocker Compose\n\n\nCreate a directory for your compose file. For example, \nhome-panel\n\n\nCreate a \nconfig.json\n using the template below\n\n\nCreate a \ndocker-compose.yml\n file:\n\n\n\n\n\n\nThis example maps the \nssl\n directory in the home directory.\nInside this directory are two files \nfullchain.pem\n and \nprivkey.pem\n\nwhich are files generated by \nLet's Encrypt\n.\nChange the environment variables to your own Home Assistant details\n\n\n\n\n---\n\n\nversion\n:\n \n'3'\n\n\n\nservices\n:\n\n  \nhome-panel\n:\n\n    \nimage\n:\n \ntimmo001/home-panel\n\n    \nenvironment\n:\n\n      \nREACT_APP_HASS_HOST\n:\n \n'hassioserver.com'\n\n      \nREACT_APP_HASS_PASSWORD\n:\n \n'supersecurepassword'\n\n      \nREACT_APP_HASS_SSL\n:\n \n'true'\n\n      \nREACT_APP_API_URL\n:\n \nhttps://localhost:3234\n\n    \nports\n:\n\n      \n-\n \n8234:443\n\n    \nvolumes\n:\n\n      \n-\n \n~/ssl:/ssl\n\n      \n-\n \n$(pwd)/config.json:/usr/src/app/config.json\n\n  \nhome-panel-api\n:\n\n    \nimage\n:\n \ntimmo001/home-panel-api\n\n    \nenvironment\n:\n\n      \nCERTIFICATES_DIR\n:\n \n/ssl\n\n    \nports\n:\n\n      \n-\n \n3234:3234\n\n    \nvolumes\n:\n\n      \n-\n \n~/ssl:/ssl\n\n\n\n\n\n\n\nDocker\n\u00b6\n\n\n\n\nInstall \nDocker\n\n\nCreate a \nconfig.json\n using the template below\n\n\nRun image\n\n\n\n\ndocker run -d \n\\\n\n  -e \nREACT_APP_HASS_HOST\n=\n'hassioserver.com'\n \n\\\n\n  -e \nREACT_APP_HASS_PASSWORD\n=\n'supersecurepassword'\n \n\\\n\n  -e \nREACT_APP_HASS_SSL\n=\n'true'\n \n\\\n\n  -p \n8234\n:443 \n\\\n\n  -v ~/ssl:/ssl \n\\\n\n  -v \n$(\npwd\n)\n/config.json:/usr/src/app/config.json \n\\\n\n  timmo001/home-panel\n\n\n\n\ndocker run -d \n\\\n\n  -e \nCERTIFICATES_DIR\n=\n'/ssl'\n \n\\\n\n  -p \n3234\n:3234 \n\\\n\n  -v ~/ssl:/ssl \n\\\n\n  timmo001/home-panel-api\n\n\n\n\n\n\nNode JS\n\u00b6\n\n\nAPI Setup\n\u00b6\n\n\n\n\nFirst clone the\n  \nHome Assistant API\n repository\n\n\nCheckout the version you want via releases\n\n\nInstall packages\n\n\n\n\nyarn install\n\n\n\n\n\n\nRun\n\n\n\n\nnode index.js\n\n\n\n\nWebapp\n\u00b6\n\n\n\n\nClone this repository\n\n\nCheckout the version you want via releases\n\n\nCopy \n.env\n to \n.env.local\n and update it to use your own Home Assistant details\n\n\nRename \nconfig.template.json\n to \nconfig.json\n\n\n\n\ncp config.template.json src/config.json\n\n\n\n\n\n\nUpdate \nsrc/config.json\n to your configuration\n\n\nInstall packages\n\n\n\n\nyarn install\n\n\n\n\n\n\nCopy \nconfig.json\n into \nnode_modules/config.json\n\n\n\n\ncp config.json node_modules/\n\n\n\n\n\n\nBuild a production version\n\n\n\n\nyarn build\n\n\n\n\nProduction - Secure\n\u00b6\n\n\n\n\nInstall nginx\n\n\nEdit your server config \n/etc/nginx/conf.d/default.conf\n\n\n\n\nserver {\n  listen 443 ssl http2 default_server;\n  listen [::]:443 ssl http2 default_server;\n\n  root /usr/share/nginx/html;\n  index index.html;\n  server_name 172.0.0.1;\n\n  ssl_certificate /ssl/fullchain.pem;\n  ssl_certificate_key /ssl/privkey.pem;\n\n  location / {\n    try_files $uri /index.html;\n  }\n}\n\n\n\n\n\n\nCopy the files in the build folder into nginx's html directory at\n \n/usr/share/nginx/html\n\n\nStart your server\n\n\n\n\nDevelopment\n\u00b6\n\n\n\n\nThis option is not secure. Do not open to the outside world!\n\n\n\n\n\n\nRun the app\n\n\n\n\nyarn start\n\n\n\n\n\n\nThe app should open in your default browser under \nhttp://localhost:3000",
            "title": "Setup"
        },
        {
            "location": "/setup/#setup",
            "text": "",
            "title": "Setup"
        },
        {
            "location": "/setup/#docker-compose",
            "text": "Install  Docker  and\n  Docker Compose  Create a directory for your compose file. For example,  home-panel  Create a  config.json  using the template below  Create a  docker-compose.yml  file:    This example maps the  ssl  directory in the home directory.\nInside this directory are two files  fullchain.pem  and  privkey.pem \nwhich are files generated by  Let's Encrypt .\nChange the environment variables to your own Home Assistant details   ---  version :   '3'  services : \n   home-panel : \n     image :   timmo001/home-panel \n     environment : \n       REACT_APP_HASS_HOST :   'hassioserver.com' \n       REACT_APP_HASS_PASSWORD :   'supersecurepassword' \n       REACT_APP_HASS_SSL :   'true' \n       REACT_APP_API_URL :   https://localhost:3234 \n     ports : \n       -   8234:443 \n     volumes : \n       -   ~/ssl:/ssl \n       -   $(pwd)/config.json:/usr/src/app/config.json \n   home-panel-api : \n     image :   timmo001/home-panel-api \n     environment : \n       CERTIFICATES_DIR :   /ssl \n     ports : \n       -   3234:3234 \n     volumes : \n       -   ~/ssl:/ssl",
            "title": "Docker Compose"
        },
        {
            "location": "/setup/#docker",
            "text": "Install  Docker  Create a  config.json  using the template below  Run image   docker run -d  \\ \n  -e  REACT_APP_HASS_HOST = 'hassioserver.com'   \\ \n  -e  REACT_APP_HASS_PASSWORD = 'supersecurepassword'   \\ \n  -e  REACT_APP_HASS_SSL = 'true'   \\ \n  -p  8234 :443  \\ \n  -v ~/ssl:/ssl  \\ \n  -v  $( pwd ) /config.json:/usr/src/app/config.json  \\ \n  timmo001/home-panel  docker run -d  \\ \n  -e  CERTIFICATES_DIR = '/ssl'   \\ \n  -p  3234 :3234  \\ \n  -v ~/ssl:/ssl  \\ \n  timmo001/home-panel-api",
            "title": "Docker"
        },
        {
            "location": "/setup/#node-js",
            "text": "",
            "title": "Node JS"
        },
        {
            "location": "/setup/#api-setup",
            "text": "First clone the\n   Home Assistant API  repository  Checkout the version you want via releases  Install packages   yarn install   Run   node index.js",
            "title": "API Setup"
        },
        {
            "location": "/setup/#webapp",
            "text": "Clone this repository  Checkout the version you want via releases  Copy  .env  to  .env.local  and update it to use your own Home Assistant details  Rename  config.template.json  to  config.json   cp config.template.json src/config.json   Update  src/config.json  to your configuration  Install packages   yarn install   Copy  config.json  into  node_modules/config.json   cp config.json node_modules/   Build a production version   yarn build",
            "title": "Webapp"
        },
        {
            "location": "/setup/#production-secure",
            "text": "Install nginx  Edit your server config  /etc/nginx/conf.d/default.conf   server {\n  listen 443 ssl http2 default_server;\n  listen [::]:443 ssl http2 default_server;\n\n  root /usr/share/nginx/html;\n  index index.html;\n  server_name 172.0.0.1;\n\n  ssl_certificate /ssl/fullchain.pem;\n  ssl_certificate_key /ssl/privkey.pem;\n\n  location / {\n    try_files $uri /index.html;\n  }\n}   Copy the files in the build folder into nginx's html directory at\n  /usr/share/nginx/html  Start your server",
            "title": "Production - Secure"
        },
        {
            "location": "/setup/#development",
            "text": "This option is not secure. Do not open to the outside world!    Run the app   yarn start   The app should open in your default browser under  http://localhost:3000",
            "title": "Development"
        },
        {
            "location": "/configuration/",
            "text": "Configuration\n\u00b6\n\n\nTo get started, copy the \nstarter template\n\n to the \nconfig.json\n file.\n\n\nNow, we will go over the sections you can configure inside the JSON file along\n with examples you can adapt:\n\n\ntheme\n\u00b6\n\n\nauto\n\u00b6\n\n\nYou can override the way the \nauto\n theme triggers between light and dark\n mode. The format is similar to the way \nHome Assistant's\n\n automations work.\n You set the sensor's \nentity_id\n and the \nbelow\n threshhold.\n\n\nThe sensor below is an LDR sensor which sets the \ndark\n theme when below\n\n600 LUX\n:\n\n\n  \n\"theme\"\n:\n \n{\n\n    \n\"auto\"\n:\n \n{\n\n      \n\"sensor\"\n:\n \n\"sensor.sn1_ldr\"\n,\n\n      \n\"below\"\n:\n \n600\n\n    \n}\n\n  \n}\n,\n\n\n\n\n\nheader\n\u00b6\n\n\n  \n\"header\"\n:\n \n{\n\n    \n\"left_outdoor_weather\"\n:\n \n{\n\n      \n\"dark_sky_icon\"\n:\n \n\"sensor.dark_sky_icon\"\n,\n\n      \n\"condition\"\n:\n \n\"sensor.pws_weather\"\n,\n\n      \n\"data\"\n:\n \n[\n\n        \n{\n\n          \n\"entity_id\"\n:\n \n\"sensor.pws_temp_c\"\n,\n\n          \n\"unit_of_measurement\"\n:\n \n\"\u00b0C\"\n\n        \n},\n\n        \n{\n\n          \n\"entity_id\"\n:\n \n\"sensor.pws_relative_humidity\"\n,\n\n          \n\"unit_of_measurement\"\n:\n \n\"%\"\n\n        \n}\n\n      \n]\n\n    \n},\n\n    \n\"right_indoor\"\n:\n \n[\n\n      \n{\n\n        \n\"label\"\n:\n \n\"Living Room\"\n,\n\n        \n\"data\"\n:\n \n[\n\n          \n{\n\n            \n\"entity_id\"\n:\n \n\"sensor.dht22_01_temperature\"\n,\n\n            \n\"unit_of_measurement\"\n:\n \n\"\u00b0C\"\n\n          \n},\n\n          \n{\n\n            \n\"entity_id\"\n:\n \n\"sensor.dht22_01_humidity\"\n,\n\n            \n\"unit_of_measurement\"\n:\n \n\"%\"\n\n          \n}\n\n        \n]\n\n      \n},\n\n      \n{\n\n        \n\"label\"\n:\n \n\"Upstairs\"\n,\n\n        \n\"data\"\n:\n \n[\n\n          \n{\n\n            \n\"entity_id\"\n:\n \n\"sensor.sn2_temperature\"\n,\n\n            \n\"unit_of_measurement\"\n:\n \n\"\u00b0C\"\n\n          \n},\n\n          \n{\n\n            \n\"entity_id\"\n:\n \n\"sensor.sn2_humidity\"\n,\n\n            \n\"unit_of_measurement\"\n:\n \n\"%\"\n\n          \n}\n\n        \n]\n\n      \n}\n\n    \n]\n\n  \n}\n,\n\n\n\n\n\nleft_outdoor_weather\n\u00b6\n\n\nThis section is used for setting the \nentity_id\n's of weather sensors.\n These are meant for outdoor sensors, but can be anything that has a \nstate\n.\n\n\ndark_sky_icon\n\u00b6\n\n\nThis is the \nentity_id\n of your \nDark Sky\n icon sensor.\n\n\n      \n\"dark_sky_icon\"\n:\n \n\"sensor.dark_sky_icon\"\n,\n\n\n\n\n\ncondition\n\u00b6\n\n\nThis is the \nentity_id\n that describes the current weather conditions.\n\n\n      \n\"condition\"\n:\n \n\"sensor.pws_weather\"\n,\n\n\n\n\n\ndata\n\u00b6\n\n\nThis is an array of the \nentity_id\n's that describes the current weather\n conditions. \nunit_of_measurement\n is added onto the end of the\n sensor's \nstate\n.\n\n\n      \n\"data\"\n:\n \n[\n\n        \n{\n\n          \n\"entity_id\"\n:\n \n\"sensor.pws_temp_c\"\n,\n\n          \n\"unit_of_measurement\"\n:\n \n\"\u00b0C\"\n\n        \n},\n\n        \n{\n\n          \n\"entity_id\"\n:\n \n\"sensor.pws_relative_humidity\"\n,\n\n          \n\"unit_of_measurement\"\n:\n \n\"%\"\n\n        \n}\n\n      \n]\n\n\n\n\n\nright_indoor\n\u00b6\n\n\nTBD\n\n\nitems\n\u00b6\n\n\nTBD",
            "title": "Configuration"
        },
        {
            "location": "/configuration/#configuration",
            "text": "To get started, copy the  starter template \n to the  config.json  file.  Now, we will go over the sections you can configure inside the JSON file along\n with examples you can adapt:",
            "title": "Configuration"
        },
        {
            "location": "/configuration/#theme",
            "text": "",
            "title": "theme"
        },
        {
            "location": "/configuration/#auto",
            "text": "You can override the way the  auto  theme triggers between light and dark\n mode. The format is similar to the way  Home Assistant's \n automations work.\n You set the sensor's  entity_id  and the  below  threshhold.  The sensor below is an LDR sensor which sets the  dark  theme when below 600 LUX :     \"theme\" :   { \n     \"auto\" :   { \n       \"sensor\" :   \"sensor.sn1_ldr\" , \n       \"below\" :   600 \n     } \n   } ,",
            "title": "auto"
        },
        {
            "location": "/configuration/#header",
            "text": "\"header\" :   { \n     \"left_outdoor_weather\" :   { \n       \"dark_sky_icon\" :   \"sensor.dark_sky_icon\" , \n       \"condition\" :   \"sensor.pws_weather\" , \n       \"data\" :   [ \n         { \n           \"entity_id\" :   \"sensor.pws_temp_c\" , \n           \"unit_of_measurement\" :   \"\u00b0C\" \n         }, \n         { \n           \"entity_id\" :   \"sensor.pws_relative_humidity\" , \n           \"unit_of_measurement\" :   \"%\" \n         } \n       ] \n     }, \n     \"right_indoor\" :   [ \n       { \n         \"label\" :   \"Living Room\" , \n         \"data\" :   [ \n           { \n             \"entity_id\" :   \"sensor.dht22_01_temperature\" , \n             \"unit_of_measurement\" :   \"\u00b0C\" \n           }, \n           { \n             \"entity_id\" :   \"sensor.dht22_01_humidity\" , \n             \"unit_of_measurement\" :   \"%\" \n           } \n         ] \n       }, \n       { \n         \"label\" :   \"Upstairs\" , \n         \"data\" :   [ \n           { \n             \"entity_id\" :   \"sensor.sn2_temperature\" , \n             \"unit_of_measurement\" :   \"\u00b0C\" \n           }, \n           { \n             \"entity_id\" :   \"sensor.sn2_humidity\" , \n             \"unit_of_measurement\" :   \"%\" \n           } \n         ] \n       } \n     ] \n   } ,",
            "title": "header"
        },
        {
            "location": "/configuration/#left_outdoor_weather",
            "text": "This section is used for setting the  entity_id 's of weather sensors.\n These are meant for outdoor sensors, but can be anything that has a  state .",
            "title": "left_outdoor_weather"
        },
        {
            "location": "/configuration/#dark_sky_icon",
            "text": "This is the  entity_id  of your  Dark Sky  icon sensor.         \"dark_sky_icon\" :   \"sensor.dark_sky_icon\" ,",
            "title": "dark_sky_icon"
        },
        {
            "location": "/configuration/#condition",
            "text": "This is the  entity_id  that describes the current weather conditions.         \"condition\" :   \"sensor.pws_weather\" ,",
            "title": "condition"
        },
        {
            "location": "/configuration/#data",
            "text": "This is an array of the  entity_id 's that describes the current weather\n conditions.  unit_of_measurement  is added onto the end of the\n sensor's  state .         \"data\" :   [ \n         { \n           \"entity_id\" :   \"sensor.pws_temp_c\" , \n           \"unit_of_measurement\" :   \"\u00b0C\" \n         }, \n         { \n           \"entity_id\" :   \"sensor.pws_relative_humidity\" , \n           \"unit_of_measurement\" :   \"%\" \n         } \n       ]",
            "title": "data"
        },
        {
            "location": "/configuration/#right_indoor",
            "text": "TBD",
            "title": "right_indoor"
        },
        {
            "location": "/configuration/#items",
            "text": "TBD",
            "title": "items"
        },
        {
            "location": "/template/",
            "text": "Starter Template\n\u00b6\n\n\n{\n\n  \n\"theme\"\n:\n \n{},\n\n  \n\"header\"\n:\n \n{\n\n    \n\"left_outdoor_weather\"\n:\n \n{\n\n      \n\"dark_sky_icon\"\n:\n \n\"sensor.dark_sky_icon\"\n,\n\n      \n\"condition\"\n:\n \n\"sensor.pws_weather\"\n,\n\n      \n\"data\"\n:\n \n[\n\n        \n{\n\n          \n\"entity_id\"\n:\n \n\"sensor.pws_temp_c\"\n,\n\n          \n\"unit_of_measurement\"\n:\n \n\"\u00b0C\"\n\n        \n},\n\n        \n{\n\n          \n\"entity_id\"\n:\n \n\"sensor.pws_relative_humidity\"\n,\n\n          \n\"unit_of_measurement\"\n:\n \n\"%\"\n\n        \n}\n\n      \n]\n\n    \n},\n\n    \n\"right_indoor\"\n:\n \n[\n\n      \n{\n\n        \n\"label\"\n:\n \n\"Living Room\"\n,\n\n        \n\"data\"\n:\n \n[\n\n          \n{\n\n            \n\"entity_id\"\n:\n \n\"sensor.dht22_01_temperature\"\n,\n\n            \n\"unit_of_measurement\"\n:\n \n\"\u00b0C\"\n\n          \n},\n\n          \n{\n\n            \n\"entity_id\"\n:\n \n\"sensor.dht22_01_humidity\"\n,\n\n            \n\"unit_of_measurement\"\n:\n \n\"%\"\n\n          \n}\n\n        \n]\n\n      \n}\n\n    \n]\n\n  \n},\n\n  \n\"items\"\n:\n \n[\n\n    \n{\n\n      \n\"name\"\n:\n \n\"Living Room\"\n,\n\n      \n\"cards\"\n:\n \n[\n\n        \n{\n\n          \n\"entity_id\"\n:\n \n\"light.tv_light\"\n\n        \n}\n\n      \n]\n\n    \n},\n\n    \n{\n\n      \n\"name\"\n:\n \n\"Dining Room\"\n,\n\n      \n\"cards\"\n:\n \n[\n\n        \n{\n\n          \n\"entity_id\"\n:\n \n\"light.table_light\"\n\n        \n}\n\n      \n]\n\n    \n}\n\n  \n]\n\n\n}",
            "title": "Template"
        },
        {
            "location": "/template/#starter-template",
            "text": "{ \n   \"theme\" :   {}, \n   \"header\" :   { \n     \"left_outdoor_weather\" :   { \n       \"dark_sky_icon\" :   \"sensor.dark_sky_icon\" , \n       \"condition\" :   \"sensor.pws_weather\" , \n       \"data\" :   [ \n         { \n           \"entity_id\" :   \"sensor.pws_temp_c\" , \n           \"unit_of_measurement\" :   \"\u00b0C\" \n         }, \n         { \n           \"entity_id\" :   \"sensor.pws_relative_humidity\" , \n           \"unit_of_measurement\" :   \"%\" \n         } \n       ] \n     }, \n     \"right_indoor\" :   [ \n       { \n         \"label\" :   \"Living Room\" , \n         \"data\" :   [ \n           { \n             \"entity_id\" :   \"sensor.dht22_01_temperature\" , \n             \"unit_of_measurement\" :   \"\u00b0C\" \n           }, \n           { \n             \"entity_id\" :   \"sensor.dht22_01_humidity\" , \n             \"unit_of_measurement\" :   \"%\" \n           } \n         ] \n       } \n     ] \n   }, \n   \"items\" :   [ \n     { \n       \"name\" :   \"Living Room\" , \n       \"cards\" :   [ \n         { \n           \"entity_id\" :   \"light.tv_light\" \n         } \n       ] \n     }, \n     { \n       \"name\" :   \"Dining Room\" , \n       \"cards\" :   [ \n         { \n           \"entity_id\" :   \"light.table_light\" \n         } \n       ] \n     } \n   ]  }",
            "title": "Starter Template"
        },
        {
            "location": "/license/",
            "text": "MIT License\n\u00b6\n\n\nCopyright \u00a9 Timmo\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
            "title": "License"
        },
        {
            "location": "/license/#mit-license",
            "text": "Copyright \u00a9 Timmo  Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:  The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
            "title": "MIT License"
        }
    ]
}