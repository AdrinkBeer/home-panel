{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home Panel \u00b6 A touch-compatible web-app for controlling the home. Integrates with Home Assistant as an alternative / additional frontend. Features \u00b6 Card based user interface with support for HASS entities, links and cameras. Supports and can be used as alternate / additional frontend for Home Assistant Supports MJPEG and related image-based camera/image feeds (can also be used as a photo frame) Light control with brightness, temperature, color, effects etc. support Supports Radio playback from TuneIn API Add weather and weather icons using Home Assistant's Dark Sky component Made for touch screens with a sideways scrolling Material Design interface. (Compatible with desktops as well) Screenshots \u00b6","title":"Overview"},{"location":"#home-panel","text":"A touch-compatible web-app for controlling the home. Integrates with Home Assistant as an alternative / additional frontend.","title":"Home Panel"},{"location":"#features","text":"Card based user interface with support for HASS entities, links and cameras. Supports and can be used as alternate / additional frontend for Home Assistant Supports MJPEG and related image-based camera/image feeds (can also be used as a photo frame) Light control with brightness, temperature, color, effects etc. support Supports Radio playback from TuneIn API Add weather and weather icons using Home Assistant's Dark Sky component Made for touch screens with a sideways scrolling Material Design interface. (Compatible with desktops as well)","title":"Features"},{"location":"#screenshots","text":"","title":"Screenshots"},{"location":"configuration/","text":"Configuration \u00b6 To get started, copy the starter template to the files/config.json file in the API. Whenever you make a change, just reload the page and the latest config.json file will be used. Now, we will go over the sections you can configure inside the JSON file along with examples you can adapt: theme \u00b6 auto \u00b6 You can override the way the auto theme triggers between light and dark mode. The format is similar to the way Home Assistant's automations work. You set the sensor's entity_id and the below threshold. The sensor below is an LDR sensor which sets the dark theme when below 600 LUX : \"theme\" : { \"auto\" : { \"sensor\" : \"sensor.sn1_ldr\" , \"below\" : 600 } } , header \u00b6 This section can display weather and other sensor information in the top section of the app alongside the time and date. \"header\" : { \"left_outdoor_weather\" : { \"dark_sky_icon\" : \"sensor.dark_sky_icon\" , \"condition\" : \"sensor.pws_weather\" , \"data\" : [ { \"entity_id\" : \"sensor.pws_temp_c\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.pws_relative_humidity\" , \"unit_of_measurement\" : \"%\" } ] }, \"right_indoor\" : [ { \"label\" : \"Living Room\" , \"data\" : [ { \"entity_id\" : \"sensor.dht22_01_temperature\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.dht22_01_humidity\" , \"unit_of_measurement\" : \"%\" } ] }, { \"label\" : \"Upstairs\" , \"data\" : [ { \"entity_id\" : \"sensor.sn2_temperature\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.sn2_humidity\" , \"unit_of_measurement\" : \"%\" } ] } ] } , left_outdoor_weather \u00b6 This section is used for setting the entity_id 's of weather sensors. These are meant for outdoor sensors, but can be anything that has a state . dark_sky_icon \u00b6 This is the entity_id of your Dark Sky icon sensor. \"dark_sky_icon\" : \"sensor.dark_sky_icon\" , condition \u00b6 This is the entity_id that describes the current weather conditions. \"condition\" : \"sensor.pws_weather\" , data \u00b6 This is an array of the entity_id 's that describes the current weather conditions. unit_of_measurement is added onto the end of the sensor's state . \"data\" : [ { \"entity_id\" : \"sensor.pws_temp_c\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.pws_relative_humidity\" , \"unit_of_measurement\" : \"%\" } ] right_indoor \u00b6 This is an array of grouped sensors which are labelled by a larger set of text. { \"label\" : \"Living Room\" , \"data\" : [ { \"entity_id\" : \"sensor.dht22_01_temperature\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.dht22_01_humidity\" , \"unit_of_measurement\" : \"%\" } ] } , { \"label\" : \"Upstairs\" , \"data\" : [ { \"entity_id\" : \"sensor.sn2_temperature\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.sn2_humidity\" , \"unit_of_measurement\" : \"%\" } ] } label \u00b6 Text shown above sensor data. \"label\" : \"Living Room\" , data \u00b6 This is an array of the entity_id 's that describes the current weather conditions. unit_of_measurement is added onto the end of the sensor's state . \"data\" : [ { \"entity_id\" : \"sensor.dht22_01_temperature\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.dht22_01_humidity\" , \"unit_of_measurement\" : \"%\" } ] items \u00b6 The main view. Where all the cards, cameras, links etc. go. First give the group of cards a name, then add what you want. See below for the available types of cards. \"items\" : [ { \"name\" : \"Scenes\" , \"cards\" : [ { \"entity_id\" : \"scene.reset_lights\" }, { \"entity_id\" : \"scene.reset_kitchen_lights\" }, { \"entity_id\" : \"scene.lights_on\" }, { \"entity_id\" : \"scene.lights_off\" }, { \"entity_id\" : \"scene.all_lights_on\" }, { \"name\" : \"Night/Film Mode\" , \"entity_id\" : \"scene.night_mode\" } ] }, { \"name\" : \"Living Room\" , \"cards\" : [ { \"entity_id\" : \"light.setee_light\" }, { \"entity_id\" : \"light.tv_light\" } ] }, { \"name\" : \"Links/Cameras\" , \"cards\" : [ { \"type\" : \"link\" , \"name\" : \"Shinobi\" , \"url\" : \"http://myserver.local:8080\" }, { \"type\" : \"camera\" , \"name\" : \"Office\" , \"still_url\" : \"http://myserver.local:8080/accesscode/jpeg/groupid/name/s.jpg\" , \"url\" : \"http://myserver.local:8080/accesscode/mjpeg/groupid/name\" } ] } ] hass \u00b6 This is the default type of card. You do not need to set the type here as the app defaults to this. { \"entity_id\" : \"light.tv_light\" } , { \"name\" : \"Night/Film Mode\" , \"entity_id\" : \"scene.night_mode\" } entity_id \u00b6 The entity_id of the HASS entity. Switches and lights act as buttons which can be toggled on and off and scenes, scripts etc. act as non-toggleable buttons. \"entity_id\" : \"light.tv_light\" Lights can also be clicked and held / long pressed to set brightness, temperature, effect, color etc. in a more info dialog: name \u00b6 The name is automatically pulled from HASS , but you can set a custom name if you like. \"name\" : \"Night/Film Mode\" , link \u00b6 A simple hyperlink that opens up another webpage in a new tab/window. To create a link, you must set the type to link . You can then set the url and name as appropriate. This looks and acts the same as a normal card. { \"type\" : \"link\" , \"name\" : \"Shinobi\" , \"url\" : \"http://myserver.local:8080\" } camera \u00b6 You can add any camera image supported by your browser. Set the type to camera to use this. Set the name as appropriate. The camera type spans two cards. Clicking on the camera shows the camera's feed. { \"type\" : \"camera\" , \"name\" : \"Office\" , \"still_url\" : \"http://myserver.local:8080/accesscode/jpeg/groupid/name/s.jpg\" , \"url\" : \"http://myserver.local:8080/accesscode/mjpeg/groupid/name\" } Another use for the camera type is to show an image, instead of a camera, so your screen acts as a photo frame. { \"type\" : \"camera\" , \"name\" : \"Lake Scene\" , \"still_url\" : \"https://images.pexels.com/photos/709881/pexels-photo-709881.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" , \"url\" : \"https://images.pexels.com/photos/709881/pexels-photo-709881.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" } url \u00b6 The url of the camera feed for use in full screen when the smaller camera card is clicked. \"url\" : \"http://myserver.local:8080/accesscode/mjpeg/groupid/name\" still_url \u00b6 The url of a still image for use in the main view. This updates every minute. \"still_url\" : \"http://myserver.local:8080/accesscode/jpeg/groupid/name/s.jpg\"","title":"Configuration"},{"location":"configuration/#configuration","text":"To get started, copy the starter template to the files/config.json file in the API. Whenever you make a change, just reload the page and the latest config.json file will be used. Now, we will go over the sections you can configure inside the JSON file along with examples you can adapt:","title":"Configuration"},{"location":"configuration/#theme","text":"","title":"theme"},{"location":"configuration/#auto","text":"You can override the way the auto theme triggers between light and dark mode. The format is similar to the way Home Assistant's automations work. You set the sensor's entity_id and the below threshold. The sensor below is an LDR sensor which sets the dark theme when below 600 LUX : \"theme\" : { \"auto\" : { \"sensor\" : \"sensor.sn1_ldr\" , \"below\" : 600 } } ,","title":"auto"},{"location":"configuration/#header","text":"This section can display weather and other sensor information in the top section of the app alongside the time and date. \"header\" : { \"left_outdoor_weather\" : { \"dark_sky_icon\" : \"sensor.dark_sky_icon\" , \"condition\" : \"sensor.pws_weather\" , \"data\" : [ { \"entity_id\" : \"sensor.pws_temp_c\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.pws_relative_humidity\" , \"unit_of_measurement\" : \"%\" } ] }, \"right_indoor\" : [ { \"label\" : \"Living Room\" , \"data\" : [ { \"entity_id\" : \"sensor.dht22_01_temperature\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.dht22_01_humidity\" , \"unit_of_measurement\" : \"%\" } ] }, { \"label\" : \"Upstairs\" , \"data\" : [ { \"entity_id\" : \"sensor.sn2_temperature\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.sn2_humidity\" , \"unit_of_measurement\" : \"%\" } ] } ] } ,","title":"header"},{"location":"configuration/#left_outdoor_weather","text":"This section is used for setting the entity_id 's of weather sensors. These are meant for outdoor sensors, but can be anything that has a state .","title":"left_outdoor_weather"},{"location":"configuration/#dark_sky_icon","text":"This is the entity_id of your Dark Sky icon sensor. \"dark_sky_icon\" : \"sensor.dark_sky_icon\" ,","title":"dark_sky_icon"},{"location":"configuration/#condition","text":"This is the entity_id that describes the current weather conditions. \"condition\" : \"sensor.pws_weather\" ,","title":"condition"},{"location":"configuration/#data","text":"This is an array of the entity_id 's that describes the current weather conditions. unit_of_measurement is added onto the end of the sensor's state . \"data\" : [ { \"entity_id\" : \"sensor.pws_temp_c\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.pws_relative_humidity\" , \"unit_of_measurement\" : \"%\" } ]","title":"data"},{"location":"configuration/#right_indoor","text":"This is an array of grouped sensors which are labelled by a larger set of text. { \"label\" : \"Living Room\" , \"data\" : [ { \"entity_id\" : \"sensor.dht22_01_temperature\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.dht22_01_humidity\" , \"unit_of_measurement\" : \"%\" } ] } , { \"label\" : \"Upstairs\" , \"data\" : [ { \"entity_id\" : \"sensor.sn2_temperature\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.sn2_humidity\" , \"unit_of_measurement\" : \"%\" } ] }","title":"right_indoor"},{"location":"configuration/#label","text":"Text shown above sensor data. \"label\" : \"Living Room\" ,","title":"label"},{"location":"configuration/#data_1","text":"This is an array of the entity_id 's that describes the current weather conditions. unit_of_measurement is added onto the end of the sensor's state . \"data\" : [ { \"entity_id\" : \"sensor.dht22_01_temperature\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.dht22_01_humidity\" , \"unit_of_measurement\" : \"%\" } ]","title":"data"},{"location":"configuration/#items","text":"The main view. Where all the cards, cameras, links etc. go. First give the group of cards a name, then add what you want. See below for the available types of cards. \"items\" : [ { \"name\" : \"Scenes\" , \"cards\" : [ { \"entity_id\" : \"scene.reset_lights\" }, { \"entity_id\" : \"scene.reset_kitchen_lights\" }, { \"entity_id\" : \"scene.lights_on\" }, { \"entity_id\" : \"scene.lights_off\" }, { \"entity_id\" : \"scene.all_lights_on\" }, { \"name\" : \"Night/Film Mode\" , \"entity_id\" : \"scene.night_mode\" } ] }, { \"name\" : \"Living Room\" , \"cards\" : [ { \"entity_id\" : \"light.setee_light\" }, { \"entity_id\" : \"light.tv_light\" } ] }, { \"name\" : \"Links/Cameras\" , \"cards\" : [ { \"type\" : \"link\" , \"name\" : \"Shinobi\" , \"url\" : \"http://myserver.local:8080\" }, { \"type\" : \"camera\" , \"name\" : \"Office\" , \"still_url\" : \"http://myserver.local:8080/accesscode/jpeg/groupid/name/s.jpg\" , \"url\" : \"http://myserver.local:8080/accesscode/mjpeg/groupid/name\" } ] } ]","title":"items"},{"location":"configuration/#hass","text":"This is the default type of card. You do not need to set the type here as the app defaults to this. { \"entity_id\" : \"light.tv_light\" } , { \"name\" : \"Night/Film Mode\" , \"entity_id\" : \"scene.night_mode\" }","title":"hass"},{"location":"configuration/#entity_id","text":"The entity_id of the HASS entity. Switches and lights act as buttons which can be toggled on and off and scenes, scripts etc. act as non-toggleable buttons. \"entity_id\" : \"light.tv_light\" Lights can also be clicked and held / long pressed to set brightness, temperature, effect, color etc. in a more info dialog:","title":"entity_id"},{"location":"configuration/#name","text":"The name is automatically pulled from HASS , but you can set a custom name if you like. \"name\" : \"Night/Film Mode\" ,","title":"name"},{"location":"configuration/#link","text":"A simple hyperlink that opens up another webpage in a new tab/window. To create a link, you must set the type to link . You can then set the url and name as appropriate. This looks and acts the same as a normal card. { \"type\" : \"link\" , \"name\" : \"Shinobi\" , \"url\" : \"http://myserver.local:8080\" }","title":"link"},{"location":"configuration/#camera","text":"You can add any camera image supported by your browser. Set the type to camera to use this. Set the name as appropriate. The camera type spans two cards. Clicking on the camera shows the camera's feed. { \"type\" : \"camera\" , \"name\" : \"Office\" , \"still_url\" : \"http://myserver.local:8080/accesscode/jpeg/groupid/name/s.jpg\" , \"url\" : \"http://myserver.local:8080/accesscode/mjpeg/groupid/name\" } Another use for the camera type is to show an image, instead of a camera, so your screen acts as a photo frame. { \"type\" : \"camera\" , \"name\" : \"Lake Scene\" , \"still_url\" : \"https://images.pexels.com/photos/709881/pexels-photo-709881.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" , \"url\" : \"https://images.pexels.com/photos/709881/pexels-photo-709881.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" }","title":"camera"},{"location":"configuration/#url","text":"The url of the camera feed for use in full screen when the smaller camera card is clicked. \"url\" : \"http://myserver.local:8080/accesscode/mjpeg/groupid/name\"","title":"url"},{"location":"configuration/#still_url","text":"The url of a still image for use in the main view. This updates every minute. \"still_url\" : \"http://myserver.local:8080/accesscode/jpeg/groupid/name/s.jpg\"","title":"still_url"},{"location":"contributing/","text":"Contributing \u00b6 You are welcome to edit, fork and create pull requests as you like. If you make a change, make sure to refer to any issues that it fixes. Make sure you have used linters and tested what you have added/changed works. Any pull request will be verified by the bots, so make sure you fix any issues the bots find. I, and any other users I approve will be able to merge your changes so be patient. Docs \u00b6 Feel free to improve documentation as you like by making a pull request in /docs . Once merged into the master branch, the GitLab CI server will update the docs in the gh-pages branch.","title":"Contributing"},{"location":"contributing/#contributing","text":"You are welcome to edit, fork and create pull requests as you like. If you make a change, make sure to refer to any issues that it fixes. Make sure you have used linters and tested what you have added/changed works. Any pull request will be verified by the bots, so make sure you fix any issues the bots find. I, and any other users I approve will be able to merge your changes so be patient.","title":"Contributing"},{"location":"contributing/#docs","text":"Feel free to improve documentation as you like by making a pull request in /docs . Once merged into the master branch, the GitLab CI server will update the docs in the gh-pages branch.","title":"Docs"},{"location":"license/","text":"MIT License \u00b6 Copyright \u00a9 Timmo Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"license/#mit-license","text":"Copyright \u00a9 Timmo Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"MIT License"},{"location":"login/","text":"Account creation and login \u00b6 This screen communicates with the API to log in the the user and get the config. Once this is done, the login will be remembered automatically. (If you clear your cookies/cache or recreate the app, you will need to login or create a new account again) Create Account \u00b6 On your first run of the app, you will be preseted with an account creation screen: If you already have a user setup, click the Already have an account? button. Once you have entered all this information, click Create Account and you will be automatically logged in. There are 5 steps to creating a new account for a user. Username \u00b6 The username you will use to login. Password \u00b6 The password you will use to login. API URL \u00b6 The URL of the API. You should include the full address. For example: https://localhost:3234 http://localhost:3123 https://myserver.local:3234 Home Assistant Host \u00b6 Enter your Home Assistant instance's hostname including the port if required. (Ports 80 and 443 are not required) You do not need the https:// or http:// part of the url. This will not work. Example hostnames: localhost:8123 my.ddns.address 192.168.1.100:8123 mylocalserverhostname.local:8123 Home Assistant Password \u00b6 The password you use to login to Home Assistant. Home Assistant SSL \u00b6 Keep this box checked if your home assistant instance is secured. Those using Home Assistant locally will likely need to switch this off. Login \u00b6 Once you have created an account, you may get this screen: If you need to create a new account or your credentials have changed, Click the Create New Account button. Enter your username and password you used previously and click Log In .","title":"Login"},{"location":"login/#account-creation-and-login","text":"This screen communicates with the API to log in the the user and get the config. Once this is done, the login will be remembered automatically. (If you clear your cookies/cache or recreate the app, you will need to login or create a new account again)","title":"Account creation and login"},{"location":"login/#create-account","text":"On your first run of the app, you will be preseted with an account creation screen: If you already have a user setup, click the Already have an account? button. Once you have entered all this information, click Create Account and you will be automatically logged in. There are 5 steps to creating a new account for a user.","title":"Create Account"},{"location":"login/#username","text":"The username you will use to login.","title":"Username"},{"location":"login/#password","text":"The password you will use to login.","title":"Password"},{"location":"login/#api-url","text":"The URL of the API. You should include the full address. For example: https://localhost:3234 http://localhost:3123 https://myserver.local:3234","title":"API URL"},{"location":"login/#home-assistant-host","text":"Enter your Home Assistant instance's hostname including the port if required. (Ports 80 and 443 are not required) You do not need the https:// or http:// part of the url. This will not work. Example hostnames: localhost:8123 my.ddns.address 192.168.1.100:8123 mylocalserverhostname.local:8123","title":"Home Assistant Host"},{"location":"login/#home-assistant-password","text":"The password you use to login to Home Assistant.","title":"Home Assistant Password"},{"location":"login/#home-assistant-ssl","text":"Keep this box checked if your home assistant instance is secured. Those using Home Assistant locally will likely need to switch this off.","title":"Home Assistant SSL"},{"location":"login/#login","text":"Once you have created an account, you may get this screen: If you need to create a new account or your credentials have changed, Click the Create New Account button. Enter your username and password you used previously and click Log In .","title":"Login"},{"location":"setup/","text":"Setup \u00b6 Docker Compose \u00b6 Install Docker and Docker Compose Create a directory for your compose file. For example, home-panel Create a config.json using the template Create a docker-compose.yml file: SSL \u00b6 This example maps the ssl directory in the home directory. Inside this directory are two files fullchain.pem and privkey.pem which are files generated by Let's Encrypt . Change the environment variables to your own Home Assistant details --- version : '3' services : home-panel : image : timmo001/home-panel ports : - 8234:443 volumes : - ~/ssl:/ssl home-panel-api : image : timmo001/home-panel-api environment : CERTIFICATES_DIR : /ssl ports : - 3234:3234 volumes : - ~/ssl:/ssl - PATH_TO_CONFIG/config.json:/usr/src/app/config.json Non-SSL \u00b6 This example shows how to set up the app without ssl. This is useful for testing, but is unsecure , so don't expose the app to the outside world. --- version : '3' services : home-panel : image : timmo001/home-panel ports : - 8234:80 volumes : - PATH_TO_CONFIG/config.json:/usr/src/app/config.json home-panel-api : image : timmo001/home-panel-api ports : - 3123:3123 volumes : - PATH_TO_CONFIG/config.json:/usr/src/app/config.json Docker \u00b6 Install Docker Create a config.json using the template Run image SSL \u00b6 This example maps the ssl directory in the home directory. Inside this directory are two files fullchain.pem and privkey.pem which are files generated by Let's Encrypt . Change the environment variables to your own Home Assistant details docker run -d \\ -p 8234 :443 \\ -v ~/ssl:/ssl \\ timmo001/home-panel docker run -d \\ -e CERTIFICATES_DIR = '/ssl' \\ -p 3234 :3234 \\ -v ~/ssl:/ssl \\ -v PATH_TO_CONFIG/config.json:/usr/src/app/config.json \\ timmo001/home-panel-api Non-SSL \u00b6 This example shows how to set up the app without ssl. This is useful for testing, but is unsecure , so don't expose the app to the outside world. docker run -d \\ -p 8234 :80 \\ timmo001/home-panel docker run -d \\ -p 3123 :3123 \\ -v PATH_TO_CONFIG/config.json:/usr/src/app/config.json \\ timmo001/home-panel-api Node JS \u00b6 API Setup \u00b6 First clone the Home Assistant API repository Checkout the version you want via releases Copy files/config.template.json to files/config.json Update files/config.json to your configuration Install packages yarn install Run node index.js Webapp \u00b6 Clone this repository Checkout the version you want via releases Install packages yarn install Production - SSL \u00b6 Build a production version yarn build Install nginx Edit your server config /etc/nginx/conf.d/default.conf server { listen 443 ssl http2 default_server; listen [::]:443 ssl http2 default_server; root /usr/share/nginx/html; index index.html; server_name 172.0.0.1; ssl_certificate /ssl/fullchain.pem; ssl_certificate_key /ssl/privkey.pem; location / { try_files $uri /index.html; } } Copy the files in the build folder into nginx's html directory at /usr/share/nginx/html Start your server nginx -g \"daemon off;\" Production - Non-SSL \u00b6 This option is not secure. Do not open to the outside world! Build a production version yarn build Install nginx Edit your server config /etc/nginx/conf.d/default.conf server { listen 80 default_server; listen [::]:80 default_server; root /usr/share/nginx/html; index index.html; server_name 172.0.0.1; location / { try_files \\$uri /index.html; } } Copy the files in the build folder into nginx's html directory at /usr/share/nginx/html Start your server nginx -g \"daemon off;\" Development \u00b6 This option is not secure. Do not open to the outside world! Run the app yarn start The app should open in your default browser under http://localhost:3000","title":"Setup"},{"location":"setup/#setup","text":"","title":"Setup"},{"location":"setup/#docker-compose","text":"Install Docker and Docker Compose Create a directory for your compose file. For example, home-panel Create a config.json using the template Create a docker-compose.yml file:","title":"Docker Compose"},{"location":"setup/#ssl","text":"This example maps the ssl directory in the home directory. Inside this directory are two files fullchain.pem and privkey.pem which are files generated by Let's Encrypt . Change the environment variables to your own Home Assistant details --- version : '3' services : home-panel : image : timmo001/home-panel ports : - 8234:443 volumes : - ~/ssl:/ssl home-panel-api : image : timmo001/home-panel-api environment : CERTIFICATES_DIR : /ssl ports : - 3234:3234 volumes : - ~/ssl:/ssl - PATH_TO_CONFIG/config.json:/usr/src/app/config.json","title":"SSL"},{"location":"setup/#non-ssl","text":"This example shows how to set up the app without ssl. This is useful for testing, but is unsecure , so don't expose the app to the outside world. --- version : '3' services : home-panel : image : timmo001/home-panel ports : - 8234:80 volumes : - PATH_TO_CONFIG/config.json:/usr/src/app/config.json home-panel-api : image : timmo001/home-panel-api ports : - 3123:3123 volumes : - PATH_TO_CONFIG/config.json:/usr/src/app/config.json","title":"Non-SSL"},{"location":"setup/#docker","text":"Install Docker Create a config.json using the template Run image","title":"Docker"},{"location":"setup/#ssl_1","text":"This example maps the ssl directory in the home directory. Inside this directory are two files fullchain.pem and privkey.pem which are files generated by Let's Encrypt . Change the environment variables to your own Home Assistant details docker run -d \\ -p 8234 :443 \\ -v ~/ssl:/ssl \\ timmo001/home-panel docker run -d \\ -e CERTIFICATES_DIR = '/ssl' \\ -p 3234 :3234 \\ -v ~/ssl:/ssl \\ -v PATH_TO_CONFIG/config.json:/usr/src/app/config.json \\ timmo001/home-panel-api","title":"SSL"},{"location":"setup/#non-ssl_1","text":"This example shows how to set up the app without ssl. This is useful for testing, but is unsecure , so don't expose the app to the outside world. docker run -d \\ -p 8234 :80 \\ timmo001/home-panel docker run -d \\ -p 3123 :3123 \\ -v PATH_TO_CONFIG/config.json:/usr/src/app/config.json \\ timmo001/home-panel-api","title":"Non-SSL"},{"location":"setup/#node-js","text":"","title":"Node JS"},{"location":"setup/#api-setup","text":"First clone the Home Assistant API repository Checkout the version you want via releases Copy files/config.template.json to files/config.json Update files/config.json to your configuration Install packages yarn install Run node index.js","title":"API Setup"},{"location":"setup/#webapp","text":"Clone this repository Checkout the version you want via releases Install packages yarn install","title":"Webapp"},{"location":"setup/#production-ssl","text":"Build a production version yarn build Install nginx Edit your server config /etc/nginx/conf.d/default.conf server { listen 443 ssl http2 default_server; listen [::]:443 ssl http2 default_server; root /usr/share/nginx/html; index index.html; server_name 172.0.0.1; ssl_certificate /ssl/fullchain.pem; ssl_certificate_key /ssl/privkey.pem; location / { try_files $uri /index.html; } } Copy the files in the build folder into nginx's html directory at /usr/share/nginx/html Start your server nginx -g \"daemon off;\"","title":"Production - SSL"},{"location":"setup/#production-non-ssl","text":"This option is not secure. Do not open to the outside world! Build a production version yarn build Install nginx Edit your server config /etc/nginx/conf.d/default.conf server { listen 80 default_server; listen [::]:80 default_server; root /usr/share/nginx/html; index index.html; server_name 172.0.0.1; location / { try_files \\$uri /index.html; } } Copy the files in the build folder into nginx's html directory at /usr/share/nginx/html Start your server nginx -g \"daemon off;\"","title":"Production - Non-SSL"},{"location":"setup/#development","text":"This option is not secure. Do not open to the outside world! Run the app yarn start The app should open in your default browser under http://localhost:3000","title":"Development"},{"location":"template/","text":"Starter Template \u00b6 { \"theme\" : {}, \"header\" : { \"left_outdoor_weather\" : { \"dark_sky_icon\" : \"sensor.dark_sky_icon\" , \"condition\" : \"sensor.pws_weather\" , \"data\" : [ { \"entity_id\" : \"sensor.pws_temp_c\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.pws_relative_humidity\" , \"unit_of_measurement\" : \"%\" } ] }, \"right_indoor\" : [ { \"label\" : \"Living Room\" , \"data\" : [ { \"entity_id\" : \"sensor.dht22_01_temperature\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.dht22_01_humidity\" , \"unit_of_measurement\" : \"%\" } ] } ] }, \"items\" : [ { \"name\" : \"Living Room\" , \"cards\" : [ { \"entity_id\" : \"light.tv_light\" } ] }, { \"name\" : \"Dining Room\" , \"cards\" : [ { \"entity_id\" : \"light.table_light\" } ] } ] }","title":"Template"},{"location":"template/#starter-template","text":"{ \"theme\" : {}, \"header\" : { \"left_outdoor_weather\" : { \"dark_sky_icon\" : \"sensor.dark_sky_icon\" , \"condition\" : \"sensor.pws_weather\" , \"data\" : [ { \"entity_id\" : \"sensor.pws_temp_c\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.pws_relative_humidity\" , \"unit_of_measurement\" : \"%\" } ] }, \"right_indoor\" : [ { \"label\" : \"Living Room\" , \"data\" : [ { \"entity_id\" : \"sensor.dht22_01_temperature\" , \"unit_of_measurement\" : \"\u00b0C\" }, { \"entity_id\" : \"sensor.dht22_01_humidity\" , \"unit_of_measurement\" : \"%\" } ] } ] }, \"items\" : [ { \"name\" : \"Living Room\" , \"cards\" : [ { \"entity_id\" : \"light.tv_light\" } ] }, { \"name\" : \"Dining Room\" , \"cards\" : [ { \"entity_id\" : \"light.table_light\" } ] } ] }","title":"Starter Template"},{"location":"troubleshooting/","text":"Troubleshooting \u00b6 Use the latest version \u00b6 If your are facing any issues logging in, connecting etc. you should first make sure you are running the latest version. If you are running Docker, run: docker pull timmo001/home-panel docker pull timmo001/home-panel-api and run the containers again. You may have to clear the cache/cookies in your browser. If running natively, checkout the latest version from the release page for the app and the API and rerun the app. If you are still having issues, you can post on the Home Assistant forum thread where the community will be able to help you if not myself. Before posting your issue \u00b6 Before posting your issue, make sure you check the logs for any errors. You may be able to find out the issue for yourself. If your issue is inside the webapp, first check the developer console. To do this press F12 on the keyboard if you are running Chrome. Also check the main app logs. With Docker Compose, just cd into the docker-compose.yml directory and run: docker-compose logs -f If using Docker, run: docker logs -f CONTAINER_ID If you are still stuck, post these logs to the forum thread (make sure to remove any personal data such as a public address etc.)","title":"Troubleshooting"},{"location":"troubleshooting/#troubleshooting","text":"","title":"Troubleshooting"},{"location":"troubleshooting/#use-the-latest-version","text":"If your are facing any issues logging in, connecting etc. you should first make sure you are running the latest version. If you are running Docker, run: docker pull timmo001/home-panel docker pull timmo001/home-panel-api and run the containers again. You may have to clear the cache/cookies in your browser. If running natively, checkout the latest version from the release page for the app and the API and rerun the app. If you are still having issues, you can post on the Home Assistant forum thread where the community will be able to help you if not myself.","title":"Use the latest version"},{"location":"troubleshooting/#before-posting-your-issue","text":"Before posting your issue, make sure you check the logs for any errors. You may be able to find out the issue for yourself. If your issue is inside the webapp, first check the developer console. To do this press F12 on the keyboard if you are running Chrome. Also check the main app logs. With Docker Compose, just cd into the docker-compose.yml directory and run: docker-compose logs -f If using Docker, run: docker logs -f CONTAINER_ID If you are still stuck, post these logs to the forum thread (make sure to remove any personal data such as a public address etc.)","title":"Before posting your issue"}]}